generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  nome        String
  email       String       @unique
  funcao      String
  senha       String
  occurrences Occurrence[]
}

model Turma {
  id     String    @id @default(cuid())
  nome   String
  ano    Int
  alunos Student[]
  @@unique([nome, ano])
}

model Student {
  id              String        @id @default(cuid())
  nome            String
  email           String        @unique
  turmaId         String
  turma           Turma         @relation(fields: [turmaId], references: [id])
  data_nascimento DateTime
  occurrences     Occurrence[]
  tipoCounter     TipoCounter[]
  foto            Bytes?        // Campo opcional para armazenar a imagem como BLOB
}

model Occurrence {
  id        String   @id @default(cuid())
  alunoId   String
  usuarioId String
  data      DateTime
  tipoId    String
  tipo      Tipo     @relation(fields: [tipoId], references: [id])
  descricao String
  decisao   String
  resolvida Boolean  @default(false) // Flag para indicar se foi tratada
  usuario   User     @relation(fields: [usuarioId], references: [id])
  aluno     Student  @relation(fields: [alunoId], references: [id])
}

model Tipo {
  id          String        @id @default(cuid())
  nome        String        @unique
  gravidade   Int
  occurrences Occurrence[]
  TipoCounter TipoCounter[]
}

model TipoCounter {
  id      String  @id @default(cuid())
  alunoId String
  tipoId  String
  count   Int     @default(0)
  aluno   Student @relation(fields: [alunoId], references: [id])
  tipo    Tipo    @relation(fields: [tipoId], references: [id])
}
